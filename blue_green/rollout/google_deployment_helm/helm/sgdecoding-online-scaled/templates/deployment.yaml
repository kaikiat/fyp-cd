apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ include "ntuspeechlab.master.name" . }}
  labels:
    app.kubernetes.io/name: {{ include "ntuspeechlab.master.name" . }}
    helm.sh/chart: {{ include "ntuspeechlab.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    release: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ntuspeechlab.master.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  # Add strategy here
  strategy:
    blueGreen: 
      activeService: {{ include "ntuspeechlab.master.name" . }}
      previewService: {{ include "ntuspeechlab.master.name" . }}-preview
      autoPromotionEnabled: false 
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: /metrics
        prometheus.io/port: '8081'
      labels:
        app.kubernetes.io/name: {{ include "ntuspeechlab.master.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.image.pullSecrets }}
      containers:
        - name: {{ include "ntuspeechlab.master.name" . }}
          image: {{ .Values.image.repository }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [{{ include "ntuspeechlab.master.command" . }}]
          envFrom:
          - secretRef:
              name: environment-variables-master-secret
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            # - name: prometheus
            #   containerPort: 8081
            - containerPort: 8081
              name: metrics
              protocol: TCP 
          livenessProbe:
            httpGet:
              path: /
              {{- if eq .Values.service.enablehttps true}}
              scheme: HTTPS
              port: 8080
              {{- else }}
              port: http
              {{- end}}
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /
              {{- if eq .Values.service.enablehttps true}}
              scheme: HTTPS
              port: 8080
              {{- else }}
              port: http
              {{- end}}
            periodSeconds: 60
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: sgdecoding-online-scaled-worker-singaporecs-0519nnet3
  labels:
    app.kubernetes.io/name: {{ include "ntuspeechlab.worker.name" $ }}
    helm.sh/chart: {{ include "ntuspeechlab.chart" $ }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    release: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ntuspeechlab.worker.name" $ }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
  # Add strategy here
  strategy:
    blueGreen: 
      activeService: sgdecoding-online-scaled-worker-singaporecs-0519nnet3
      previewService: sgdecoding-online-scaled-worker-singaporecs-0519nnet3-preview
      autoPromotionEnabled: false
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: /metrics
        prometheus.io/port: '8081'
      labels:
        app.kubernetes.io/name: {{ include "ntuspeechlab.worker.name" $ }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
    spec:
      imagePullSecrets:
        - name: {{ $.Values.image.pullSecrets }}
      containers:
        - name: {{ include "ntuspeechlab.worker.name" $ }}
          image: {{ $.Values.image.repository }}
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          command: [{{ include "ntuspeechlab.worker.command" $ }}]
          envFrom:
          - secretRef:
              name: environment-variables-workers-secret
          ports:
            - name: prometheus
              containerPort: 8081
          env:
          - name: MODEL_DIR
            value: SingaporeCS_0519NNET3
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
          volumeMounts:
          - name: mypvc
            mountPath: /home/appuser/opt/models

      volumes:
        - name: mypvc
          persistentVolumeClaim:
            claimName: {{ $.Values.fileshare.claimName }}
